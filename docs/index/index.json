{"includedArchiveIdentifiers":["HMAlgorithms"],"interfaceLanguages":{"swift":[{"children":[{"children":[{"title":"Sequence","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/interspersed(with:keepinglongersuffix:)","title":"func interspersed(with: some Sequence<Self.Element>, keepingLongerSuffix: Bool) -> some Sequence<Self.Element>\n","type":"method"},{"title":"Collection","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/collection\/chunks(totalcount:)","title":"func chunks(totalCount: Int) -> some Sequence<Self.SubSequence>\n","type":"method"},{"title":"chain","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/chain(_:_:)-h2sy","title":"func chain<Element>(Element, some Sequence) -> some Sequence<Element>\n","type":"func"},{"path":"\/documentation\/hmalgorithms\/chain(_:_:)-378k7","title":"func chain<Element>(some Sequence, Element) -> some Sequence<Element>\n","type":"func"},{"path":"\/documentation\/hmalgorithms\/chainwithoutoverlap(_:_:)","title":"func chainWithoutOverlap<Element>(some Sequence, some Sequence) -> some Sequence<Element>\n","type":"func"},{"title":"product","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/product3(_:_:_:)","title":"func product3<Base1, Base2, Base3>(Base1, Base2, Base3) -> some Collection<(Base1.Element, Base2.Element, Base3.Element)>\n","type":"func"},{"path":"\/documentation\/hmalgorithms\/product4(_:_:_:_:)","title":"func product4<Base1, Base2, Base3, Base4>(Base1, Base2, Base3, Base4) -> some Collection<(Base1.Element, Base2.Element, Base3.Element, Base4.Element)>\n","type":"func"},{"path":"\/documentation\/hmalgorithms\/product(_:)","title":"func product<each Collection>(repeat each Collection) -> UnfoldSequence<(repeat (each Collection).Element), (collection: (repeat each Collection), index: (repeat (each Collection).Index))>","type":"func"}],"path":"\/documentation\/hmalgorithms\/algorithms","title":"Algorithms","type":"symbol"},{"children":[{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/init(_:_:)","title":"init(Element, Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/delegate","title":"var delegate: Element","type":"property"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/value","title":"var value: Value","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/'...(_:)-2o9e4","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/'...(_:)-7vfid","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/_(_:_:)","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/_=(_:_:)-1i9xb","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/_=(_:_:)-8n28i","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/elementvaluepair","title":"Heap.ElementValuePair","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/reversed","title":"var reversed: some Sequence<Element>","type":"property"},{"path":"\/documentation\/hmalgorithms\/heapmodule\/heap\/sorted","title":"var sorted: some Sequence<Element>","type":"property"}],"path":"\/documentation\/hmalgorithms\/heapmodule\/heap","title":"Heap","type":"extension"}],"path":"\/documentation\/hmalgorithms\/collections","title":"Collections","type":"symbol"},{"children":[{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hmalgorithms\/rangeprotocol\/contains(_:)-d5x0","title":"func contains(Range<Self.Bound>) -> Bool","type":"method"}],"title":"RangeProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hmalgorithms\/rangeprotocol\/contains(_:)-5hu3y","title":"func contains(Self) -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hmalgorithms\/rangeprotocol\/contains(_:)-d5x0","title":"func contains(Range<Self.Bound>) -> Bool","type":"method"}],"title":"RangeProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hmalgorithms\/rangeprotocol\/contains(_:)-6p0d2","title":"func contains(ClosedRange<Self.Bound>) -> Bool","type":"method"}],"path":"\/documentation\/hmalgorithms\/rangeprotocol","title":"RangeProtocol","type":"protocol"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/additivearithmetic\/_(_:_:)","title":"static func Â± (Self, Self) -> ClosedRange<Self>","type":"op"}],"path":"\/documentation\/hmalgorithms\/swift\/additivearithmetic","title":"AdditiveArithmetic","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/comparable\/_(_:_:)","title":"static func < (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hmalgorithms\/swift\/comparable\/comparable-implementations","title":"Comparable Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/swift\/comparable","title":"Comparable","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/equatable\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hmalgorithms\/swift\/equatable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/swift\/equatable","title":"Equatable","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/setalgebra\/init(unique:)","title":"init(unique: some Sequence<Self.Element>) throws","type":"init"}],"path":"\/documentation\/hmalgorithms\/swift\/setalgebra","title":"SetAlgebra","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/anysequence\/init(_:)","title":"init(() -> Element?)","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/anysequence\/onlymatcherror\/morethanonematch","title":"case moreThanOneMatch","type":"case"},{"path":"\/documentation\/hmalgorithms\/swift\/anysequence\/onlymatcherror\/nomatches","title":"case noMatches","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/anysequence\/onlymatcherror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hmalgorithms\/swift\/anysequence\/onlymatcherror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/anysequence\/onlymatcherror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/anysequence\/onlymatcherror\/throw()","title":"func `throw`<Never>() throws -> Never","type":"method"}],"path":"\/documentation\/hmalgorithms\/swift\/anysequence\/onlymatcherror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/swift\/anysequence\/onlymatcherror","title":"AnySequence.OnlyMatchError","type":"enum"}],"path":"\/documentation\/hmalgorithms\/swift\/anysequence","title":"AnySequence","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/array\/init(mirrorchildvaluesof:)","title":"init(mirrorChildValuesOf: some Any) throws(Error)","type":"init"}],"path":"\/documentation\/hmalgorithms\/swift\/array","title":"Array","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/closedrange\/contains(_:)","title":"func contains(ClosedRange<Bound>) -> Bool","type":"method"}],"path":"\/documentation\/hmalgorithms\/swift\/closedrange\/rangeprotocol-implementations","title":"RangeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/swift\/closedrange","title":"ClosedRange","type":"extension"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/keyvaluepairs\/accesserror\/novalue(key:)","title":"case noValue(key: Key)","type":"case"},{"path":"\/documentation\/hmalgorithms\/swift\/keyvaluepairs\/accesserror\/typecastfailure(key:)","title":"case typeCastFailure(key: Key)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/keyvaluepairs\/accesserror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/keyvaluepairs\/accesserror\/throw()","title":"func `throw`<Never>() throws -> Never","type":"method"}],"path":"\/documentation\/hmalgorithms\/swift\/keyvaluepairs\/accesserror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/swift\/keyvaluepairs\/accesserror","title":"KeyValuePairs.AccessError","type":"enum"}],"path":"\/documentation\/hmalgorithms\/swift\/keyvaluepairs","title":"KeyValuePairs","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/partialrangefrom\/contains(_:)-1ojna","title":"func contains(PartialRangeFrom<Bound>) -> Bool","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/partialrangefrom\/contains(_:)-3j8m","title":"func contains(ClosedRange<Bound>) -> Bool","type":"method"}],"path":"\/documentation\/hmalgorithms\/swift\/partialrangefrom\/rangeprotocol-implementations","title":"RangeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/swift\/partialrangefrom","title":"PartialRangeFrom","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/partialrangethrough\/init(_:)","title":"init(PartialRangeUpTo<Bound>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/partialrangethrough\/contains(_:)-1uj93","title":"func contains(PartialRangeUpTo<Bound>) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/partialrangethrough\/contains(_:)-2ibe9","title":"func contains(PartialRangeThrough<Bound>) -> Bool","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/partialrangethrough\/contains(_:)-2v187","title":"func contains(ClosedRange<Bound>) -> Bool","type":"method"}],"path":"\/documentation\/hmalgorithms\/swift\/partialrangethrough\/rangeprotocol-implementations","title":"RangeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/swift\/partialrangethrough","title":"PartialRangeThrough","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/partialrangeupto\/init(_:)","title":"init(PartialRangeThrough<Bound>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/partialrangeupto\/contains(_:)-4qnm6","title":"func contains(PartialRangeThrough<Bound>) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/partialrangeupto\/contains(_:)-1d5at","title":"func contains(PartialRangeUpTo<Bound>) -> Bool","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/partialrangeupto\/contains(_:)-7xgtq","title":"func contains(ClosedRange<Bound>) -> Bool","type":"method"}],"path":"\/documentation\/hmalgorithms\/swift\/partialrangeupto\/rangeprotocol-implementations","title":"RangeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/swift\/partialrangeupto","title":"PartialRangeUpTo","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/range\/contains(_:)-5xmf6","title":"func contains(Range<Bound>) -> Bool","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/range\/contains(_:)-7oe76","title":"func contains(ClosedRange<Bound>) -> Bool","type":"method"}],"path":"\/documentation\/hmalgorithms\/swift\/range\/rangeprotocol-implementations","title":"RangeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/swift\/range","title":"Range","type":"extension"}],"path":"\/documentation\/hmalgorithms\/swift","title":"Swift","type":"extension"},{"title":"Sequence","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/last","title":"var last: Self.Element?","type":"property"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/sum","title":"var sum: Self.Element?","type":"property"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/withdropiterators","title":"var withDropIterators: some Sequence<(element: Self.Element, iterator: Self.Iterator)>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/compacted(by:)","title":"func compacted<Error, Wrapped>(by: (Self.Element) throws(Error) -> Wrapped?) throws(Error) -> some Collection<(element: Self.Element, unwrapped: Wrapped)>\n","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/definiteintegral()-2o9r6","title":"func definiteIntegral<Scalar>() -> Scalar?","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/definiteintegral()-31dqw","title":"func definiteIntegral<Scalar>() -> Scalar?","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/distributeduniformly(sharecount:)","title":"func distributedUniformly(shareCount: Int) -> some LazySequenceProtocol","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/issorted(by:)","title":"func isSorted<each Comparable, Error>(by: (Self.Element) throws(Error) -> (repeat each Comparable)) throws(Error) -> Bool","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/max(by:)-2d9qd","title":"func max<Error>(by: (Self.Element) throws(Error) -> some Comparable) throws(Error) -> Self.Element?","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/max(by:)-5rnzt","title":"func max<Error>(by: (Self.Element) throws(Error) -> (some Comparable)?) throws(Error) -> Self.Element?","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/min(by:)-8bk47","title":"func min<Error>(by: (Self.Element) throws(Error) -> some Comparable) throws(Error) -> Self.Element?","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/min(by:)-x6y7","title":"func min<Error>(by: (Self.Element) throws(Error) -> (some Comparable)?) throws(Error) -> Self.Element?","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/onlymatch(for:)","title":"func onlyMatch<Error>(for: (Self.Element) throws(Error) -> Bool) throws -> Self.Element","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/prefixthroughfirst(where:)","title":"func prefixThroughFirst(where: (Self.Element) -> Bool) -> some Sequence<Self.Element>\n","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/reduce(_:)","title":"func reduce<Error>((Self.Element, Self.Element) throws(Error) -> Self.Element) throws(Error) -> Self.Element?","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/rotated(by:)","title":"func rotated(by: Int) -> any Sequence<Self.Element>","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/sequence\/sorted(by:)","title":"func sorted<each Comparable, Error>(by: (Self.Element) throws(Error) -> (repeat each Comparable)) throws(Error) -> [Self.Element]","type":"method"}],"path":"\/documentation\/hmalgorithms\/swift\/sequence","title":"Sequence","type":"extension"},{"path":"\/documentation\/hmalgorithms\/infinitesequence(of:)","title":"func infiniteSequence<Element>(of: Element) -> some Sequence<Element>\n","type":"func"},{"path":"\/documentation\/hmalgorithms\/zip(_:constant:)","title":"func zip<Sequence, Constant>(Sequence, constant: Constant) -> some Sequence<(Sequence.Element, Constant)>\n","type":"func"},{"title":"Collection","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/collection\/prefix(through:)","title":"func prefix(through: Self.Element) -> Self.SubSequence?","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/collection\/prefix(upto:)","title":"func prefix(upTo: Self.Element) -> Self.SubSequence?","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/collection\/rotated(by:)","title":"func rotated(by: Int) -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/collection\/subscript(startindexoffsetby:)","title":"subscript(startIndexOffsetBy _: Int) -> Self.Element","type":"subscript"},{"path":"\/documentation\/hmalgorithms\/swift\/collection\/subscript(validating:)","title":"subscript(validating _: Self.Index) -> Self.Element","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/collection\/indexingerror","title":"Collection.IndexingError","type":"typealias"}],"path":"\/documentation\/hmalgorithms\/swift\/collection","title":"Collection","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/indexingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/indexingerror\/throw()","title":"func `throw`<Never>() throws -> Never","type":"method"}],"path":"\/documentation\/hmalgorithms\/indexingerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/indexingerror","title":"IndexingError","type":"struct"},{"title":"SetAlgebra","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/setalgebraerror\/duplicateelement\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/setalgebraerror\/duplicateelement\/throw()","title":"func `throw`<Never>() throws -> Never","type":"method"}],"path":"\/documentation\/hmalgorithms\/setalgebraerror\/duplicateelement\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/setalgebraerror\/duplicateelement","title":"SetAlgebraError.DuplicateElement","type":"struct"}],"path":"\/documentation\/hmalgorithms\/setalgebraerror","title":"SetAlgebraError","type":"enum"},{"path":"\/documentation\/hmalgorithms\/swift\/setalgebra\/error","title":"SetAlgebra.Error","type":"typealias"}],"path":"\/documentation\/hmalgorithms\/standard-library","title":"Standard Library","type":"symbol"},{"children":[{"title":"Collection","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/key","title":"Key","type":"associatedtype"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/keys-swift.associatedtype","title":"Keys","type":"associatedtype"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/value","title":"Value","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/init(_:uniquingkeyswith:)","title":"init(some Sequence<(Self.Key, Self.Value)>, uniquingKeysWith: (Self.Value, Self.Value) throws -> Self.Value) rethrows","type":"init"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/init(bucketing:)","title":"init(bucketing: some Sequence<Self.Key>)","type":"init"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/init(grouping:)-1n8j4","title":"init<ValueElement>(grouping: some Sequence)","type":"init"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/init(grouping:)-2wqmw","title":"init<ValueElement>(grouping: some Sequence)","type":"init"},{"children":[{"children":[{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/init(uniquekeyswithvalues:)-9zl9i","title":"init(uniqueKeysWithValues: some Sequence<(key: Self.Key, value: Self.Value)>)","type":"init"}],"title":"DictionaryProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/init(uniquekeyswithvalues:)-7a2hg","title":"init(uniqueKeysWithValues: some Sequence<(Self.Key, Self.Value)>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/keys-swift.property","title":"var keys: Self.Keys","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/compactmapkeys(_:)","title":"func compactMapKeys<Transformed, Error>((Self.Key) throws(Error) -> Transformed?) throws(Error) -> [Transformed : Self.Value]","type":"method"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/mapkeys(_:)","title":"func mapKeys<Transformed, Error>((Self.Key) throws(Error) -> Transformed) throws(Error) -> [Transformed : Self.Value]","type":"method"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/mapkeys(_:uniquingkeyswith:)","title":"func mapKeys<Transformed, TransformError, CombineError>((Self.Key) throws(TransformError) -> Transformed, uniquingKeysWith: (Self.Value, Self.Value) throws(CombineError) -> Self.Value) rethrows -> [Transformed : Self.Value]","type":"method"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/maptovalues(_:)","title":"func mapToValues<Transformed, Error>((Self.Element) throws(Error) -> Transformed) throws(Error) -> [Self.Key : Transformed]","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/merge(_:uniquingkeyswith:)-7ggc7","title":"func merge<Error>(some Sequence<(key: Self.Key, value: Self.Value)>, uniquingKeysWith: (Self.Value, Self.Value) throws(Error) -> Self.Value) throws(Error)","type":"method"}],"title":"DictionaryProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/merge(_:uniquingkeyswith:)-7rf3s","title":"func merge(some Sequence<(Self.Key, Self.Value)>, uniquingKeysWith: (Self.Value, Self.Value) throws -> Self.Value) rethrows","type":"method"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/merging(_:uniquingkeyswith:)","title":"func merging(Self, uniquingKeysWith: (Self.Value, Self.Value) throws -> Self.Value) rethrows -> Self","type":"method"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/onlykey(for:)","title":"func onlyKey(for: Self.Value) throws -> Self.Key","type":"method"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/path(to:)","title":"func path(to: Self.Value) -> (some Sequence<Self.Key>)?\n","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/subscript(_:)","title":"subscript(Self.Key) -> Self.Value?","type":"subscript"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/subscript(_:default:)","title":"subscript(Self.Key, default _: @autoclosure () -> Self.Value) -> Self.Value","type":"subscript"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/subscript(_:valueaddedifnil:)","title":"subscript(Self.Key, valueAddedIfNil _: @autoclosure () -> Self.Value) -> Self.Value","type":"subscript"},{"path":"\/documentation\/hmalgorithms\/dictionaryprotocol\/subscript(optional:)","title":"subscript(optional _: Self.Key?) -> Self.Value?","type":"subscript"}],"path":"\/documentation\/hmalgorithms\/dictionaryprotocol","title":"DictionaryProtocol","type":"protocol"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/init(bucketing:)","title":"init(bucketing: some Sequence<Self.Key>)","type":"init"},{"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/init(grouping:)-1419x","title":"init<ValueElement>(grouping: some Sequence)","type":"init"},{"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/init(grouping:)-259vo","title":"init<ValueElement>(grouping: some Sequence)","type":"init"},{"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/init(uniquekeyswithvalues:)","title":"init(uniqueKeysWithValues: some Sequence<(key: Self.Key, value: Self.Value)>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/compactmapkeys(_:)","title":"func compactMapKeys<Transformed, Error>((Self.Key) throws(Error) -> Transformed?) throws(Error) -> [Transformed : Self.Value]","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/mapkeys(_:)","title":"func mapKeys<Transformed, Error>((Self.Key) throws(Error) -> Transformed) throws(Error) -> [Transformed : Self.Value]","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/mapkeys(_:uniquingkeyswith:)","title":"func mapKeys<Transformed, TransformError, CombineError>((Self.Key) throws(TransformError) -> Transformed, uniquingKeysWith: (Self.Value, Self.Value) throws(CombineError) -> Self.Value) rethrows -> [Transformed : Self.Value]","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/maptovalues(_:)","title":"func mapToValues<Transformed, Error>((Self.Element) throws(Error) -> Transformed) throws(Error) -> [Self.Key : Transformed]","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/merge(_:uniquingkeyswith:)","title":"func merge<Error>(some Sequence<(key: Self.Key, value: Self.Value)>, uniquingKeysWith: (Self.Value, Self.Value) throws(Error) -> Self.Value) throws(Error)","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/onlykey(for:)","title":"func onlyKey(for: Self.Value) throws -> Self.Key","type":"method"},{"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/path(to:)","title":"func path(to: Self.Value) -> (some Sequence<Self.Key>)?\n","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/subscript(_:valueaddedifnil:)","title":"subscript(Self.Key, valueAddedIfNil _: @autoclosure () -> Self.Value) -> Self.Value","type":"subscript"},{"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/subscript(optional:)","title":"subscript(optional _: Self.Key?) -> Self.Value?","type":"subscript"}],"path":"\/documentation\/hmalgorithms\/swift\/dictionary\/dictionaryprotocol-implementations","title":"DictionaryProtocol Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/swift\/dictionary","title":"Dictionary","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/init(bucketing:)","title":"init(bucketing: some Sequence<Self.Key>)","type":"init"},{"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/init(grouping:)-2g2o9","title":"init<ValueElement>(grouping: some Sequence)","type":"init"},{"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/init(grouping:)-4wz8x","title":"init<ValueElement>(grouping: some Sequence)","type":"init"},{"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/init(uniquekeyswithvalues:)","title":"init(uniqueKeysWithValues: some Sequence<(key: Self.Key, value: Self.Value)>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/compactmapkeys(_:)","title":"func compactMapKeys<Transformed, Error>((Self.Key) throws(Error) -> Transformed?) throws(Error) -> [Transformed : Self.Value]","type":"method"},{"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/mapkeys(_:)","title":"func mapKeys<Transformed, Error>((Self.Key) throws(Error) -> Transformed) throws(Error) -> [Transformed : Self.Value]","type":"method"},{"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/mapkeys(_:uniquingkeyswith:)","title":"func mapKeys<Transformed, TransformError, CombineError>((Self.Key) throws(TransformError) -> Transformed, uniquingKeysWith: (Self.Value, Self.Value) throws(CombineError) -> Self.Value) rethrows -> [Transformed : Self.Value]","type":"method"},{"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/maptovalues(_:)","title":"func mapToValues<Transformed, Error>((Self.Element) throws(Error) -> Transformed) throws(Error) -> [Self.Key : Transformed]","type":"method"},{"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/merge(_:uniquingkeyswith:)","title":"func merge<Error>(some Sequence<(key: Self.Key, value: Self.Value)>, uniquingKeysWith: (Self.Value, Self.Value) throws(Error) -> Self.Value) throws(Error)","type":"method"},{"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/onlykey(for:)","title":"func onlyKey(for: Self.Value) throws -> Self.Key","type":"method"},{"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/path(to:)","title":"func path(to: Self.Value) -> (some Sequence<Self.Key>)?\n","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/subscript(_:valueaddedifnil:)","title":"subscript(Self.Key, valueAddedIfNil _: @autoclosure () -> Self.Value) -> Self.Value","type":"subscript"},{"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/subscript(optional:)","title":"subscript(optional _: Self.Key?) -> Self.Value?","type":"subscript"}],"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary\/dictionaryprotocol-implementations","title":"DictionaryProtocol Implementations","type":"symbol"}],"path":"\/documentation\/hmalgorithms\/orderedcollections\/ordereddictionary","title":"OrderedDictionary","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/pickvalue\/keep","title":"static var keep: (Value, Value) -> Value","type":"property"},{"path":"\/documentation\/hmalgorithms\/pickvalue\/overwrite","title":"static var overwrite: (Value, Value) -> Value","type":"property"}],"path":"\/documentation\/hmalgorithms\/pickvalue","title":"PickValue","type":"enum"}],"path":"\/documentation\/hmalgorithms\/dictionaries","title":"Dictionaries","type":"symbol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/conformancedelegator\/delegate-swift.associatedtype","title":"Delegate","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hmalgorithms\/conformancedelegator\/delegate-swift.property","title":"var delegate: Self.Delegate","type":"property"}],"path":"\/documentation\/hmalgorithms\/conformancedelegator","title":"ConformanceDelegator","type":"protocol"}],"path":"\/documentation\/hmalgorithms","title":"HMAlgorithms","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}